{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n..\nTime: 0.024\n\nOK (2 tests)\n\n","instructions":"\nThis is an instructor-led exercise with no written instructions.\nYour instructor will explain the exercise.\n","Item.java":"\npublic class Item {\n    private String itemType;\n    private int sellIn;\n    private int quality;\n    \n    public Item(String itemType, int sellIn, int quality){\n        this.itemType = itemType;\n        this.sellIn = sellIn;\n        this.quality = quality;\n    }\n\n    public void updateQuality(){\n        if(this.sellIn < 0){\n            this.sellIn -= 1;\n            this.quality -=2;\n        }else{\n            this.sellIn -= 1;\n            this.quality -= 1; \n        }\n    }\n\n    public int getSellIn(){\n        return this.sellIn;\n    }\n\n    public int getQuality(){\n        return this.quality;\n    }\n}","ItemTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class ItemTest {\n\n    @Test\n    public void after_update_lower_both_values_at_each_day(){\n        //Given\n        Item item = new Item(\"normal\",14,10);\n\n        //When\n        item.updateQuality();\n\n        //Then\n        assertEquals(13,item.getSellIn());\n        assertEquals(9,item.getQuality());\n    }\n    \n    @Test\n    public void after_update_quality_degrades_twice_when_sell_by_date_passed(){\n        //Given\n        Item item = new Item(\"normal\",-5,10);\n\n        //When\n        item.updateQuality();\n\n        //Then\n        assertEquals(-6,item.getSellIn());\n        assertEquals(8,item.getQuality());\n    }\n\n    //TODO\n}"}